package RFID;

import java.io.BufferedReader;
import java.io.File;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.UnsupportedEncodingException;
import java.util.Date;

import javax.sound.sampled.AudioInputStream;
import javax.sound.sampled.AudioSystem;
import javax.sound.sampled.Clip;
import javax.sound.sampled.LineUnavailableException;
import javax.sound.sampled.UnsupportedAudioFileException;

import org.apache.http.HttpResponse;
import org.apache.http.client.ClientProtocolException;
import org.apache.http.client.HttpClient;
import org.apache.http.client.methods.HttpGet;
import org.apache.http.client.methods.HttpPost;
import org.apache.http.entity.StringEntity;
import org.apache.http.impl.client.HttpClientBuilder;
import org.json.JSONArray;
import org.json.JSONObject;

public class Main{
	public static String RFID = null;
	public static JSONArray array;
	public static Panel form;
	public static ReadRFID readRFID = null;
	static Date now;
	public static void main(String[] args){
	File fileIn = new File("lib/sound/bip.wav");
	try{
		AudioInputStream audioInputStream = AudioSystem.getAudioInputStream(fileIn);
		Clip clip = AudioSystem.getClip();
	}catch(Exception e){
		//
	}
	
	
	form = new Panel();
		readRFID = new ReadRFID();
		
		getData();
	
		Runnable task = new Runnable(){
			public void run(){
				readRFID.start();
				while(true){
					try {
						Thread.sleep(500);
					} catch (InterruptedException e) {
						// TODO Auto-generated catch block
						e.printStackTrace();
					}
					RFID = readRFID.getRFID();
					System.out.println(RFID);
					if (RFID != null) {
						try {
							Thread.sleep(500);
							Main.CheckRFID();
							readRFID.setRFID(null);
							Thread.sleep(500);
						} catch (Exception e) {
							System.out.println("Connection Fail");
							e.printStackTrace();
						}
					}
				}
			}
		};
		
		Thread check = new Thread(task);
		check.start();
		
		
	}
	
	public static void getData() {
		try {
			HttpClient client = HttpClientBuilder.create().build();
			HttpGet request = new HttpGet("http://localhost:3000/api/employee");
			//request.addHeader("accept", "application/json");
		
			HttpResponse response = client.execute(request);
			BufferedReader reader = new BufferedReader(new InputStreamReader(
				response.getEntity().getContent())
			);
			StringBuilder sb = new StringBuilder();
			String line = null;

			while ((line = reader.readLine()) != null) {
				sb.append(line);
			}
			array = new JSONArray(sb.toString());
			//System.out.println(array);

		}catch (Exception e) {
			System.out.println(e);
		}

	}
	
	@SuppressWarnings("deprecation")
	public static void CheckRFID() {
		try {
			HttpClient client = HttpClientBuilder.create().build();
			HttpPost requestpost = new HttpPost("http://localhost:3000/api/check-in");
			for (int i = 0; i < array.length(); i++) {
				
				JSONObject person = array.getJSONObject(i);
				if (person.getString("card").equals(RFID)) {
					clip.open(audioInputStream);
					StringEntity params = new StringEntity(person.toString());
					requestpost.setHeader("Content-type", "application/json");
					requestpost.setEntity(params);
					HttpResponse response = client.execute(requestpost);
					
					BufferedReader reader = new BufferedReader(
							new InputStreamReader(response.getEntity()
									.getContent()));
					StringBuilder sb = new StringBuilder();
					String line = null;
					while ((line = reader.readLine()) != null) {
						sb.append(line);
					}
					System.out.println(sb);
					JSONArray json = new JSONArray('[' + sb.toString() + ']');

					now = new Date();
					String time;
					time = now.getHours()+":"+now.getMinutes()+":"+now.getSeconds();
					
					form.setForm(person.getString("fname"),person.getString("lname"),person.getString("position"), time);
						
					break;
				}
			}

		} catch (Exception e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}

	}
	

}